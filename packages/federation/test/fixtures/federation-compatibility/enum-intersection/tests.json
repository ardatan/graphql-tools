[
  {
    "query": "\n      query {\n        users {\n          id\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "id": "u1"
          },
          {
            "id": "u2"
          }
        ]
      }
    }
  },
  {
    "query": "\n      query {\n        users {\n          id\n          type\n        }\n      }\n    ",
    "expected": {
      "errors": true,
      "data": {
        "users": [
          {
            "id": "u1",
            "type": "REGULAR"
          },
          {
            "id": "u2",
            "type": null
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          users {\n            id\n            # NOTE\n            # type field resolves to null for ANONYMOUS users\n            # because it is not a value available in the subgraph A\n            type\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        usersB {\n          id\n          type\n        }\n      }\n    ",
    "expected": {
      "data": {
        "usersB": [
          {
            "id": "u1",
            "type": "REGULAR"
          },
          {
            "id": "u2",
            "type": null
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"b\") {\n        {\n          usersB {\n            id\n            # NOTE\n            # type field resolves to null for ANONYMOUS users\n            # even though it is a value available in the subgraph B.\n            # The response from the subgraph B contains:\n            # {\"type\": \"REGULAR\"} and {\"type\": \"ANONYMOUS\"}.\n            # It's the gateway that makes the \"null\" as it's @inaccessible enum value,\n            # so it can't leak to the response.\n            type\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        usersByType(type: REGULAR) {\n          id\n          type\n        }\n      }\n    ",
    "expected": {
      "data": {
        "usersByType": [
          {
            "id": "u1",
            "type": "REGULAR"
          }
        ]
      }
    }
  },
  {
    "query": "\n      query {\n        usersByType(type: ANONYMOUS) {\n          id\n          type\n        }\n      }\n    ",
    "expected": {
      "errors": true,
      "data": null
    },
    "plan": "\n      # NOTE\n      # It's Gateway that is responsible for validating the enum value.\n      # It's @inaccessible so it should not be in the API schema (gateway schema).\n    "
  }
]