[
  {
    "query": "\n      query {\n        feed {\n          id\n          createdAt\n        }\n      }\n    ",
    "expected": {
      "data": {
        "feed": [
          {
            "id": "i1",
            "createdAt": "i1-createdAt"
          },
          {
            "id": "i2",
            "createdAt": "i2-createdAt"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            # NOTE\n            # Query.feed is only available in subgraph A.\n            # Post.createdAt is available in subgraph A for ImagePost.createdAt.\n            # ImagePost.createdAt is available in subgraph B.\n            # Subgraph B overrides ImagePost.createdAt from subgraph A.\n            # ImagePost.createdAt from subgraph A should never be used,\n            # it should always be routed to subgraph B.\n            feed {\n              __typename\n              id\n              # Query.feed resolves only the ImagePost type.\n              # It's the only type that implements Post in subgraph A.\n              # In order to route to subgraph B, to resolve ImagePost.createdAt\n              # we need to make sure the returned type is ImagePost (hance the __typename),\n              # and we need the \"id\" field to be able to perform the entity call.\n              ... on ImagePost {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"feed.@\") {\n          Fetch(service: \"b\") {\n            {\n              ... on ImagePost {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on ImagePost {\n                # ImagePost.createdAt is fetched from subgraph B\n                createdAt\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        feed {\n          ... on TextPost {\n            id\n            body\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "feed": [
          {},
          {}
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          feed {\n            # Query.feed resolves Post interface,\n            # but the only type that implements Post in subgraph A is ImagePost.\n            # Query planner knows it and makes an empty (__typename) query to subgraph A.\n            __typename\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        anotherFeed {\n          createdAt\n        }\n      }\n    ",
    "expected": {
      "data": {
        "anotherFeed": [
          {
            "createdAt": "i1-createdAt"
          },
          {
            "createdAt": "i2-createdAt"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"b\") {\n        {\n          anotherFeed {\n            __typename\n            createdAt\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        anotherFeed {\n          createdAt\n          id\n          ... on ImagePost {\n            createdAt\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "anotherFeed": [
          {
            "createdAt": "i1-createdAt",
            "id": "i1"
          },
          {
            "createdAt": "i2-createdAt",
            "id": "i2"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"b\") {\n        {\n          anotherFeed {\n            __typename\n            createdAt\n            id\n            ... on ImagePost {\n              createdAt\n              id\n            }\n          }\n        }\n      },\n    }\n    "
  }
]