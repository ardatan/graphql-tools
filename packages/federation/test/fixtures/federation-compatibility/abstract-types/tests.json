[
  {
    "query": "\n      query {\n        products {\n          id\n          dimensions {\n            size\n            weight\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "dimensions": {
              "size": "small",
              "weight": 0.5
            }
          },
          {
            "id": "p3",
            "dimensions": {
              "size": "small",
              "weight": 0.6
            }
          },
          {
            "id": "p2",
            "dimensions": {
              "size": "small",
              "weight": 0.2
            }
          },
          {
            "id": "p4",
            "dimensions": {
              "size": "small",
              "weight": 0.3
            }
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"products\") {\n        {\n          products {\n            __typename\n            id\n            dimensions {\n              size\n              weight\n            }\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        similar(id: \"p1\") {\n          id\n          sku\n        }\n      }\n    ",
    "expected": {
      "data": {
        "similar": [
          {
            "id": "p3",
            "sku": "sku-3"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"products\") {\n        {\n          similar(id: \"p1\") {\n            __typename\n            id\n            sku\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        book: similar(id: \"p1\") {\n          id\n          sku\n          delivery(zip: \"1234\") {\n            fastestDelivery\n            estimatedDelivery\n          }\n        }\n        magazine: similar(id: \"p2\") {\n          id\n          sku\n          delivery(zip: \"1234\") {\n            fastestDelivery\n            estimatedDelivery\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "book": [
          {
            "id": "p3",
            "sku": "sku-3",
            "delivery": {
              "fastestDelivery": "same day",
              "estimatedDelivery": "1 day"
            }
          }
        ],
        "magazine": [
          {
            "id": "p4",
            "sku": "sku-4",
            "delivery": {
              "fastestDelivery": "same day",
              "estimatedDelivery": "1 day"
            }
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            book: similar(id: \"p1\") {\n              __typename\n              id\n              sku\n              ... on Book {\n                __typename\n                id\n                dimensions {\n                  size\n                  weight\n                }\n              }\n              ... on Magazine {\n                __typename\n                id\n                dimensions {\n                  size\n                  weight\n                }\n              }\n            }\n            magazine: similar(id: \"p2\") {\n              __typename\n              id\n              sku\n              ... on Book {\n                __typename\n                id\n                dimensions {\n                  size\n                  weight\n                }\n              }\n              ... on Magazine {\n                __typename\n                id\n                dimensions {\n                  size\n                  weight\n                }\n              }\n            }\n          }\n        },\n        Parallel {\n          Flatten(path: \"book.@\") {\n            Fetch(service: \"inventory\") {\n              {\n                ... on Book {\n                  __typename\n                  id\n                  dimensions {\n                    size\n                    weight\n                  }\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                  dimensions {\n                    size\n                    weight\n                  }\n                }\n              } =>\n              {\n                ... on Book {\n                  delivery(zip: \"1234\") {\n                    fastestDelivery\n                    estimatedDelivery\n                  }\n                }\n                ... on Magazine {\n                  delivery(zip: \"1234\") {\n                    fastestDelivery\n                    estimatedDelivery\n                  }\n                }\n              }\n            },\n          },\n          Flatten(path: \"magazine.@\") {\n            Fetch(service: \"inventory\") {\n              {\n                ... on Book {\n                  __typename\n                  id\n                  dimensions {\n                    size\n                    weight\n                  }\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                  dimensions {\n                    size\n                    weight\n                  }\n                }\n              } =>\n              {\n                ... on Book {\n                  delivery(zip: \"1234\") {\n                    fastestDelivery\n                    estimatedDelivery\n                  }\n                }\n                ... on Magazine {\n                  delivery(zip: \"1234\") {\n                    fastestDelivery\n                    estimatedDelivery\n                  }\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          sku\n          ... on Product {\n            sku\n          }\n          ... on Book {\n            sku\n          }\n          ... on Magazine {\n            sku\n          }\n          ... on Similar {\n            __typename\n            type: __typename\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "sku": "sku-1",
            "__typename": "Book",
            "type": "Book"
          },
          {
            "sku": "sku-3",
            "__typename": "Book",
            "type": "Book"
          },
          {
            "sku": "sku-2",
            "__typename": "Magazine",
            "type": "Magazine"
          },
          {
            "sku": "sku-4",
            "__typename": "Magazine",
            "type": "Magazine"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"products\") {\n        {\n          products {\n            __typename\n            sku\n            ... on Book {\n              sku\n            }\n            ... on Magazine {\n              sku\n            }\n            ... on Similar {\n              __typename\n              type: __typename\n            }\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          author: createdBy {\n            email\n            totalProductsCreated\n          }\n          ... on Magazine {\n            title\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "author": {
              "email": "u1@example.com",
              "totalProductsCreated": 2
            }
          },
          {
            "author": {
              "email": "u2@example.com",
              "totalProductsCreated": 2
            }
          },
          {
            "author": {
              "email": "u1@example.com",
              "totalProductsCreated": 2
            },
            "title": "Magazine 1"
          },
          {
            "author": {
              "email": "u2@example.com",
              "totalProductsCreated": 2
            },
            "title": "Magazine 2"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              author: createdBy {\n                email\n                totalProductsCreated\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"magazines\") {\n            {\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Magazine {\n                title\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          id\n          reviews {\n            product {\n              sku\n              ... on Magazine {\n                title\n              }\n              ... on Book {\n                reviewsCount\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "sku": "sku-1",
                  "reviewsCount": 2
                }
              },
              {
                "product": {
                  "sku": "sku-1",
                  "reviewsCount": 2
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "sku": "sku-2",
                  "title": "Magazine 1"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    ... on Book {\n                      __typename\n                      id\n                      reviewsCount\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    ... on Book {\n                      __typename\n                      id\n                      reviewsCount\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Book {\n                  __typename\n                  id\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Book {\n                  sku\n                }\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"magazines\") {\n              {\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Magazine {\n                  title\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          id\n          reviews {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "id": 1
              },
              {
                "id": 2
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "id": 3
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  id\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  id\n                }\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = true) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @include(if: $title) {\n                title\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1"
                }
              },
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Include(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = false) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @include(if: $title) {\n                title\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1"
                }
              },
              {
                "product": {
                  "id": "p1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Include(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = false) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @skip(if: $title) {\n                title\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1"
                }
              },
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Skip(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = true) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @skip(if: $title) {\n                title\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1"
                }
              },
              {
                "product": {
                  "id": "p1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Skip(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = true) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @skip(if: $title) {\n                title\n              }\n              ... on Book {\n                sku\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "sku": "sku-1"
                }
              },
              {
                "product": {
                  "id": "p1",
                  "sku": "sku-1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Skip(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Book {\n                  __typename\n                  id\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Book {\n                  sku\n                }\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = false) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @skip(if: $title) {\n                title\n              }\n              ... on Book {\n                sku\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1",
                  "sku": "sku-1"
                }
              },
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1",
                  "sku": "sku-1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @skip(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Skip(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Book {\n                  __typename\n                  id\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Book {\n                  sku\n                }\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = true) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @include(if: $title) {\n                title\n                ... on Book {\n                  sku\n                }\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1",
                  "sku": "sku-1"
                }
              },
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1",
                  "sku": "sku-1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Book {\n                  __typename\n                  id\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Book @include(if: $title) {\n                  sku\n                }\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n          Include(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($title: Boolean = true) {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Book @include(if: $title) {\n                title\n                ... on Book @skip(if: $title) {\n                  sku\n                }\n              }\n              ... on Magazine {\n                sku\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1"
                }
              },
              {
                "product": {
                  "id": "p1",
                  "title": "Book 1"
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "sku": "sku-2"
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                      ... on Book @skip(if: $title) {\n                        __typename\n                        id\n                      }\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Book @include(if: $title) {\n                      __typename\n                      id\n                      ... on Book @skip(if: $title) {\n                        __typename\n                        id\n                      }\n                    }\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Parallel {\n          Include(if: $title) {\n            Flatten(path: \"products.@.reviews.@.product\") {\n              Fetch(service: \"books\") {\n                {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Book {\n                    title\n                  }\n                }\n              },\n            }\n          },\n          Flatten(path: \"products.@.reviews.@.product\") {\n            Fetch(service: \"products\") {\n              {\n                ... on Book {\n                  ... on Book {\n                    __typename\n                    id\n                  }\n                }\n                ... on Magazine {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on Book @include(if: $title) {\n                  ... on Book @skip(if: $title) {\n                    sku\n                  }\n                }\n                ... on Magazine {\n                  sku\n                }\n              }\n            },\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Magazine {\n                publisherType {\n                  ...Publisher\n                }\n              }\n              ... on Book {\n                publisherType {\n                  ...Publisher\n                }\n              }\n            }\n          }\n        }\n      }\n\n      fragment Publisher on PublisherType {\n        ... on Agency {\n          id\n          companyName\n        }\n        ... on Self {\n          email\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "publisherType": {
                    "email": "u1@example.com"
                  }
                }
              },
              {
                "product": {
                  "id": "p1",
                  "publisherType": {
                    "email": "u1@example.com"
                  }
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "publisherType": {
                    "id": "a1",
                    "companyName": "Agency 1"
                  }
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Flatten(path: \"products.@.reviews.@.product\") {\n          Fetch(service: \"products\") {\n            {\n              ... on Magazine {\n                __typename\n                id\n              }\n              ... on Book {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Magazine {\n                publisherType {\n                  __typename\n                  ...Publisher\n                  ... on Agency {\n                    __typename\n                  }\n                }\n              }\n              ... on Book {\n                publisherType {\n                  __typename\n                  ...Publisher\n                  ... on Agency {\n                    __typename\n                  }\n                }\n              }\n            }\n            \n            fragment Publisher on PublisherType {\n              ... on Agency {\n                id\n              }\n              ... on Self {\n                email\n              }\n            }\n          },\n        },\n        Flatten(path: \"products.@.reviews.@.product.publisherType\") {\n          Fetch(service: \"agency\") {\n            {\n              ... on Agency {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Agency {\n                companyName\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          id\n          reviews {\n            product {\n              id\n              ... on Magazine {\n                publisherType {\n                  ...Publisher\n                }\n              }\n              ... on Book {\n                publisherType {\n                  ...Publisher\n                }\n              }\n            }\n          }\n        }\n      }\n\n      fragment Publisher on PublisherType {\n        ... on Agency {\n          id\n          companyName\n        }\n        ... on Self {\n          email\n        }\n        ... on Group {\n          name\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "id": "p1",
            "reviews": [
              {
                "product": {
                  "id": "p1",
                  "publisherType": {
                    "email": "u1@example.com"
                  }
                }
              },
              {
                "product": {
                  "id": "p1",
                  "publisherType": {
                    "email": "u1@example.com"
                  }
                }
              }
            ]
          },
          {
            "id": "p3",
            "reviews": []
          },
          {
            "id": "p2",
            "reviews": [
              {
                "product": {
                  "id": "p2",
                  "publisherType": {
                    "id": "a1",
                    "companyName": "Agency 1"
                  }
                }
              }
            ]
          },
          {
            "id": "p4",
            "reviews": []
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              id\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Book {\n                __typename\n                id\n              }\n              ... on Magazine {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Book {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n              ... on Magazine {\n                reviews {\n                  product {\n                    __typename\n                    id\n                    ... on Magazine {\n                      __typename\n                      id\n                    }\n                    ... on Book {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n        Flatten(path: \"products.@.reviews.@.product\") {\n          Fetch(service: \"products\") {\n            {\n              ... on Magazine {\n                __typename\n                id\n              }\n              ... on Book {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Magazine {\n                publisherType {\n                  __typename\n                  ...Publisher\n                  ... on Agency {\n                    __typename\n                  }\n                }\n              }\n              ... on Book {\n                publisherType {\n                  __typename\n                  ...Publisher\n                  ... on Agency {\n                    __typename\n                  }\n                }\n              }\n            }\n            \n            fragment Publisher on PublisherType {\n              ... on Agency {\n                id\n              }\n              ... on Self {\n                email\n              }\n            }\n          },\n        },\n        Flatten(path: \"products.@.reviews.@.product.publisherType\") {\n          Fetch(service: \"agency\") {\n            {\n              ... on Agency {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Agency {\n                companyName\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  }
]