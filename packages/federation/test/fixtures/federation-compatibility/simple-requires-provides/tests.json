[
  {
    "query": "\n      query {\n        me {\n          id\n        }\n      }\n    ",
    "expected": {
      "data": {
        "me": {
          "id": "u1"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"accounts\") {\n        {\n          me {\n            id\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        me {\n          id\n          reviews {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "me": {
          "id": "u1",
          "reviews": [
            {
              "id": "r1"
            },
            {
              "id": "r2"
            }
          ]
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"accounts\") {\n          {\n            me {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"me\") {\n          # NOTE\n          # Nothing really interesting here, just fetching User.reviews.id, because subgraph Accounts could not provide it.\n          Fetch(service: \"reviews\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on User {\n                reviews {\n                  id\n                }\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        me {\n          reviews {\n            id\n            author {\n              id\n              username\n            }\n            product {\n              inStock\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "me": {
          "reviews": [
            {
              "id": "r1",
              "author": {
                "id": "u1",
                "username": "u-username-1"
              },
              "product": {
                "inStock": true
              }
            },
            {
              "id": "r2",
              "author": {
                "id": "u1",
                "username": "u-username-1"
              },
              "product": {
                "inStock": false
              }
            }
          ]
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"accounts\") {\n          {\n            me {\n              __typename\n              # NOTE\n              # This is required in order to resolve the User.reviews.* fields\n              id\n            }\n          }\n        },\n        Flatten(path: \"me\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on User {\n                reviews {\n                  id\n                  author {\n                    id\n                    username\n                  }\n                  product {\n                    __typename\n                    # NOTE\n                    # upc is a key field of Product in subgraph Inventory\n                    upc\n                  }\n                }\n              }\n            }\n          },\n        },\n        Flatten(path: \"me.reviews.@.product\") {\n          Fetch(service: \"inventory\") {\n            {\n              ... on Product {\n                __typename\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                # NOTE\n                # it's available only in Inventory\n                inStock\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        products {\n          name\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "name": "p-name-1"
          },
          {
            "name": "p-name-2"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"products\") {\n        {\n          products {\n            name\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        products {\n          price\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "price": 11
          },
          {
            "price": 22
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"products\") {\n        {\n          products {\n            price\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        products {\n          shippingEstimate\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "shippingEstimate": 110
          },
          {
            "shippingEstimate": 440
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              # NOTE\n              upc # upc is a key field of Product in subgraph Inventory\n              price # price is required to calculate shippingEstimate\n              weight # weight is required to calculate shippingEstimate\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"inventory\") {\n            {\n              ... on Product {\n                __typename\n                upc\n                price\n                weight\n              }\n            } =>\n            {\n              ... on Product {\n                # NOTE\n                # got them all!\n                shippingEstimate\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        products {\n          shippingEstimate\n          weight\n          price\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "shippingEstimate": 110,
            "weight": 1,
            "price": 11
          },
          {
            "shippingEstimate": 440,
            "weight": 2,
            "price": 22
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              upc\n              price\n              weight\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"inventory\") {\n            {\n              ... on Product {\n                __typename\n                upc\n                price\n                weight\n              }\n            } =>\n            {\n              ... on Product {\n                shippingEstimate\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        products {\n          reviews {\n            id\n            author {\n              username\n            }\n            product {\n              name\n              shippingEstimate\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "products": [
          {
            "reviews": [
              {
                "id": "r1",
                "author": {
                  "username": "u-username-1"
                },
                "product": {
                  "name": "p-name-1",
                  "shippingEstimate": 110
                }
              }
            ]
          },
          {
            "reviews": [
              {
                "id": "r2",
                "author": {
                  "username": "u-username-1"
                },
                "product": {
                  "name": "p-name-2",
                  "shippingEstimate": 440
                }
              }
            ]
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"products\") {\n          {\n            products {\n              __typename\n              # NOTE\n              # We need to fetch Product.reviews.* fields from Reviews\n              # upc is a key field of Product in subgraph Reviews\n              upc\n            }\n          }\n        },\n        Flatten(path: \"products.@\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on Product {\n                __typename\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                reviews {\n                  id\n                  author {\n                    username\n                  }\n                  product {\n                    __typename\n                    upc\n                  }\n                }\n              }\n            }\n          },\n        },\n        # NOTE\n        # we got Product.upc from Reviews, now we can fetch name, price and weight from Products subgraph\n        # as it's needed to resolve shippingEstimate\n        Flatten(path: \"products.@.reviews.@.product\") {\n          Fetch(service: \"products\") {\n            {\n              ... on Product {\n                __typename\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                name\n                price\n                weight\n              }\n            }\n          },\n        },\n        Flatten(path: \"products.@.reviews.@.product\") {\n          Fetch(service: \"inventory\") {\n            {\n              ... on Product {\n                __typename\n                price\n                weight\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                shippingEstimate\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      {\n        me {\n          reviews {\n            product {\n              reviews {\n                id\n              }\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "me": {
          "reviews": [
            {
              "product": {
                "reviews": [
                  {
                    "id": "r1"
                  }
                ]
              }
            },
            {
              "product": {
                "reviews": [
                  {
                    "id": "r2"
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"accounts\") {\n          {\n            me {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"me\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on User {\n                reviews {\n                  product {\n                    reviews {\n                      id\n                    }\n                  }\n                }\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        me {\n          reviews {\n            product {\n              inStock\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "me": {
          "reviews": [
            {
              "product": {
                "inStock": true
              }
            },
            {
              "product": {
                "inStock": false
              }
            }
          ]
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"accounts\") {\n          {\n            me {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"me\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on User {\n                reviews {\n                  product {\n                    __typename\n                    upc\n                  }\n                }\n              }\n            }\n          },\n        },\n        Flatten(path: \"me.reviews.@.product\") {\n          Fetch(service: \"inventory\") {\n            {\n              ... on Product {\n                __typename\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                inStock\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        me {\n          reviews {\n            product {\n              shippingEstimate\n            }\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "me": {
          "reviews": [
            {
              "product": {
                "shippingEstimate": 110
              }
            },
            {
              "product": {
                "shippingEstimate": 440
              }
            }
          ]
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"accounts\") {\n          {\n            me {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"me\") {\n          Fetch(service: \"reviews\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on User {\n                reviews {\n                  product {\n                    __typename\n                    upc\n                  }\n                }\n              }\n            }\n          },\n        },\n        Flatten(path: \"me.reviews.@.product\") {\n          Fetch(service: \"products\") {\n            {\n              ... on Product {\n                __typename\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                price\n                weight\n              }\n            }\n          },\n        },\n        Flatten(path: \"me.reviews.@.product\") {\n          Fetch(service: \"inventory\") {\n            {\n              ... on Product {\n                __typename\n                price\n                weight\n                upc\n              }\n            } =>\n            {\n              ... on Product {\n                shippingEstimate\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  }
]