[
  {
    "query": "\n      query {\n        productFromD(id: \"1\") {\n          id\n          name\n          category {\n            id\n            name\n            details\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "productFromD": {
          "id": "1",
          "name": "Product#1",
          "category": {
            "id": "3",
            "name": "Category#3",
            "details": "Details for Product#1"
          }
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"d\") {\n          {\n            # NOTE\n            # Query.productFromD is only available in subgraph D.\n            # We need to fetch Product.category { id name details }\n            # Product.category is available in subgraphs A and B.\n            # Subgraph A provides Product.category { details }\n            # Subgraph B provides Product.category { id }\n            # Subgraph C provides Category.name based on Category.id (entity call)\n            productFromD(id: 1) {\n              __typename\n              id\n              name\n            }\n          }\n        },\n        Parallel {\n          Flatten(path: \"productFromD\") {\n            Fetch(service: \"a\") {\n              {\n                ... on Product {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                # NOTE\n                # Product.category { details } is fetched from subgraph A using Product(id) call\n                ... on Product {\n                  category {\n                    details\n                  }\n                }\n              }\n            },\n          },\n          Sequence {\n            Flatten(path: \"productFromD\") {\n              Fetch(service: \"b\") {\n                {\n                  ... on Product {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    category {\n                      __typename\n                      id\n                    }\n                  }\n                }\n              },\n            },\n            Flatten(path: \"productFromD.category\") {\n              Fetch(service: \"c\") {\n                {\n                  ... on Category {\n                    __typename\n                    id\n                  }\n                } =>\n                {\n                  # NOTE\n                  # Product.category { name } is fetched from subgraph C using Category(id) call.\n                  # Category.id was fetched from subgraph B using Product(id) { category { id } } call.\n                  ... on Category {\n                    name\n                  }\n                }\n              },\n            },\n          },\n        },\n      },\n    }\n    "
  }
]