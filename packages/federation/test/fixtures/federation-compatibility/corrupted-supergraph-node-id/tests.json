[
  {
    "query": "\n      query {\n        node(id: \"a1\") {\n          id\n        }\n      }\n    ",
    "expected": {
      "errors": true,
      "data": null
    },
    "plan": "\n      # NOTE\n      # The query planner fails to find a resolvable query path to the Query.node.id.\n      # Query.node in subgraph A can't resolve Chat.id, because it's @external\n      # Query.node in subgraph B can't resolve Account.id, because it's @external\n      # Supergraph was composed by the composition library, but it's impossible to resolve the query.\n      # A query planner should be able to detect this and return an error.\n    "
  },
  {
    "query": "\n      query {\n        account: node(id: \"a1\") {\n          __typename\n        }\n        chat: node(id: \"c1\") {\n          __typename\n        }\n      }\n    ",
    "expected": {
      "data": {
        "account": {
          "__typename": "Account"
        },
        "chat": {
          "__typename": "Chat"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          account: node(id: \"a1\") {\n            __typename\n          }\n          chat: node(id: \"c1\") {\n            __typename\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        account: node(id: \"a1\") {\n          ... on Account {\n            id\n            username\n          }\n        }\n        chat: node(id: \"c1\") {\n          ... on Chat {\n            id\n            text\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "account": {
          "id": "a1",
          "username": "a1-username"
        },
        "chat": {
          "id": "c1",
          "text": "c1-text"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Parallel {\n        Fetch(service: \"a\") {\n          {\n            account: node(id: \"a1\") {\n              __typename\n              ... on Account {\n                id\n                username\n              }\n            }\n          }\n        },\n        Fetch(service: \"b\") {\n          {\n            chat: node(id: \"c1\") {\n              __typename\n              ... on Chat {\n                id\n                text\n              }\n            }\n          }\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        account: node(id: \"a1\") {\n          ... on Chat {\n            id\n          }\n        }\n        chat: node(id: \"c1\") {\n          ... on Account {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "account": {},
        "chat": {}
      }
    },
    "plan": "\n    QueryPlan {\n      Parallel {\n        Fetch(service: \"b\") {\n          {\n            account: node(id: \"a1\") {\n              __typename\n              ... on Chat {\n                id\n              }\n            }\n          }\n        },\n        Fetch(service: \"a\") {\n          {\n            chat: node(id: \"c1\") {\n              __typename\n              ... on Account {\n                id\n              }\n            }\n          }\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        account: node(id: \"a1\") {\n          __typename\n          ... on Chat {\n            id\n          }\n        }\n        chat: node(id: \"c1\") {\n          __typename\n          ... on Account {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "account": {
          "__typename": "Account"
        },
        "chat": {
          "__typename": "Chat"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Parallel {\n        Fetch(service: \"b\") {\n          {\n            account: node(id: \"a1\") {\n              __typename\n              ... on Chat {\n                id\n              }\n            }\n          }\n        },\n        Fetch(service: \"a\") {\n          {\n            chat: node(id: \"c1\") {\n              __typename\n              ... on Account {\n                id\n              }\n            }\n          }\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        account: node(id: \"a1\") {\n          id\n          ... on Chat {\n            id\n          }\n        }\n        chat: node(id: \"c1\") {\n          __typename\n          ... on Account {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": null,
      "errors": true
    }
  },
  {
    "query": "\n      query {\n        chat(id: \"c1\") {\n          id\n        }\n      }\n    ",
    "expected": {
      "data": {
        "chat": {
          "id": "c1"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"b\") {\n        {\n          chat(id: \"c1\") {\n            id\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        account(id: \"a1\") {\n          id\n        }\n      }\n    ",
    "expected": {
      "data": {
        "account": {
          "id": "a1"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          account(id: \"a1\") {\n            id\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        chat(id: \"c1\") {\n          id\n          text\n          account {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "chat": {
          "id": "c1",
          "text": "c1-text",
          "account": {
            "id": "a1"
          }
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"b\") {\n          {\n            chat(id: \"c1\") {\n              __typename\n              id\n              text\n            }\n          }\n        },\n        Flatten(path: \"chat\") {\n          Fetch(service: \"a\") {\n            {\n              ... on Chat {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Chat {\n                account {\n                  id\n                }\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        account(id: \"a1\") {\n          id\n          username\n          chats {\n            id\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "account": {
          "id": "a1",
          "username": "a1-username",
          "chats": [
            {
              "id": "c1"
            }
          ]
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            account(id: \"a1\") {\n              __typename\n              id\n              username\n            }\n          }\n        },\n        Flatten(path: \"account\") {\n          Fetch(service: \"b\") {\n            {\n              ... on Account {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on Account {\n                chats {\n                  id\n                }\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  }
]