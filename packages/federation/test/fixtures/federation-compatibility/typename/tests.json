[
  {
    "query": "\n      query {\n        union {\n          __typename\n          typename: __typename\n        }\n      }\n    ",
    "expected": {
      "data": {
        "union": {
          "__typename": "Oven",
          "typename": "Oven"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          union {\n            __typename\n            typename: __typename\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        interface {\n          id\n          __typename\n          typename: __typename\n          t: __typename\n        }\n      }\n    ",
    "expected": {
      "data": {
        "interface": {
          "id": "2",
          "__typename": "Toaster",
          "typename": "Toaster",
          "t": "Toaster"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          interface {\n            __typename\n            id\n            typename: __typename\n            t: __typename\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        union {\n          __typename\n          ... on Oven {\n            typename: __typename\n          }\n          ... on Toaster {\n            typename: __typename\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "union": {
          "__typename": "Oven",
          "typename": "Oven"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          union {\n            __typename\n            ... on Oven {\n              typename: __typename\n            }\n            ... on Toaster {\n              typename: __typename\n            }\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        interface {\n          __typename\n          ... on Oven {\n            typename: __typename\n          }\n          ... on Toaster {\n            typename: __typename\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "interface": {
          "__typename": "Toaster",
          "typename": "Toaster"
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          interface {\n            __typename\n            ... on Oven {\n              typename: __typename\n            }\n            ... on Toaster {\n              typename: __typename\n            }\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        users {\n          id\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "id": "u1"
          },
          {
            "id": "u2"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"b\") {\n        {\n          users {\n            id\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        users {\n          __typename\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "__typename": "Admin"
          },
          {
            "__typename": "Admin"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"b\") {\n          {\n            # NOTE\n            # it starts here, with an @interfaceObject\n            users {\n              # @interfaceObject cannot resolve correct __typename as it's an object type that mimics an interface\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"users.@\") {\n          Fetch(service: \"a\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on User {\n                # NOTE\n                # that's why it needs to be resolved in subgraph A (via entity call), in the actual object type\n                __typename\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  }
]