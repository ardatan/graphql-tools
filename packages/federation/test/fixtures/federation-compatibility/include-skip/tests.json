[
  {
    "query": "\n      query ($bool: Boolean = false) {\n        product {\n          price\n          neverCalledInclude @include(if: $bool)\n        }\n      }\n    ",
    "expected": {
      "data": {
        "product": {
          "price": 699.99
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            product {\n              __typename\n              id\n              price\n              # NOTE\n              # Query planner cannot be sure if $bool is true or false\n              # so it's kept in the plan\n              # In order to get Product.neverCalledInclude,\n              # that requires Product.isExpensive field,\n              # it needs to fetch \"price\" first\n              ... on Product @include(if: $bool) {\n                __typename\n                id\n                price\n              }\n            }\n          }\n        },\n        # NOTE\n        # Interesting thing is that the query planner moves @include on top of the Sequence.\n        # It makes the plan conditional on the value of $bool.\n        # The execution engine will not execute the Sequence if $bool is false.\n        # It's a nice feature, makes the plan easy to read and understand.\n        Include(if: $bool) {\n          Sequence {\n            Flatten(path: \"product\") {\n              Fetch(service: \"b\") {\n                {\n                  ... on Product {\n                    __typename\n                    price\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    isExpensive\n                  }\n                }\n              },\n            },\n            Flatten(path: \"product\") {\n              Fetch(service: \"c\") {\n                {\n                  ... on Product {\n                    __typename\n                    isExpensive\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    neverCalledInclude\n                  }\n                }\n              },\n            },\n          }\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($bool: Boolean = true) {\n        product {\n          price\n          neverCalledSkip @skip(if: $bool)\n        }\n      }\n    ",
    "expected": {
      "data": {
        "product": {
          "price": 699.99
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            product {\n              __typename\n              id\n              price\n              ... on Product @skip(if: $bool) {\n                __typename\n                id\n                price\n              }\n            }\n          }\n        },\n        Skip(if: $bool) {\n          Sequence {\n            Flatten(path: \"product\") {\n              Fetch(service: \"b\") {\n                {\n                  ... on Product {\n                    __typename\n                    price\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    isExpensive\n                  }\n                }\n              },\n            },\n            Flatten(path: \"product\") {\n              Fetch(service: \"c\") {\n                {\n                  ... on Product {\n                    __typename\n                    isExpensive\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    neverCalledSkip\n                  }\n                }\n              },\n            },\n          }\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($bool: Boolean = true) {\n        product {\n          price\n          include @include(if: $bool)\n        }\n      }\n    ",
    "expected": {
      "data": {
        "product": {
          "price": 699.99,
          "include": true
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            product {\n              __typename\n              id\n              price\n              ... on Product @include(if: $bool) {\n                __typename\n                id\n                price\n              }\n            }\n          }\n        },\n        Include(if: $bool) {\n          Sequence {\n            Flatten(path: \"product\") {\n              Fetch(service: \"b\") {\n                {\n                  ... on Product {\n                    __typename\n                    price\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    isExpensive\n                  }\n                }\n              },\n            },\n            Flatten(path: \"product\") {\n              Fetch(service: \"c\") {\n                {\n                  ... on Product {\n                    __typename\n                    isExpensive\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    include\n                  }\n                }\n              },\n            },\n          }\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query ($bool: Boolean = false) {\n        product {\n          price\n          skip @skip(if: $bool)\n        }\n      }\n    ",
    "expected": {
      "data": {
        "product": {
          "price": 699.99,
          "skip": true
        }
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            product {\n              __typename\n              id\n              price\n              ... on Product @skip(if: $bool) {\n                __typename\n                id\n                price\n              }\n            }\n          }\n        },\n        Skip(if: $bool) {\n          Sequence {\n            Flatten(path: \"product\") {\n              Fetch(service: \"b\") {\n                {\n                  ... on Product {\n                    __typename\n                    price\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    isExpensive\n                  }\n                }\n              },\n            },\n            Flatten(path: \"product\") {\n              Fetch(service: \"c\") {\n                {\n                  ... on Product {\n                    __typename\n                    isExpensive\n                    id\n                  }\n                } =>\n                {\n                  ... on Product {\n                    skip\n                  }\n                }\n              },\n            },\n          }\n        },\n      },\n    }\n    "
  }
]