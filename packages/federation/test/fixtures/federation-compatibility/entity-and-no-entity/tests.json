[
  {
    "query": "\n      query {\n        users {\n          id\n          name\n        }\n        accounts {\n          ... on User {\n            id\n            name\n          }\n          ... on Admin {\n            id\n            photo\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "id": "n1",
            "name": "n1-profile"
          }
        ],
        "accounts": [
          {
            "id": "n1",
            "name": "n1-profile"
          },
          {
            "id": "a1",
            "photo": "a1-photo"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Parallel {\n        Sequence {\n          Fetch(service: \"a\") {\n            {\n              users {\n                __typename\n                id\n              }\n            }\n          },\n          Flatten(path: \"users.@\") {\n            Fetch(service: \"b\") {\n              {\n                ... on User {\n                  __typename\n                  id\n                }\n              } =>\n              {\n                ... on User {\n                  name\n                }\n              }\n            },\n          },\n        },\n        Fetch(service: \"b\") {\n          {\n            accounts {\n              __typename\n              ... on User {\n                id\n                name\n              }\n              ... on Admin {\n                # NOTE:\n                # User.id and Admin.id have similar output types,\n                # but one returns a non-nullable field and the other a nullable field.\n                # To avoid a GraphQL error, we need to alias the field.\n                id__alias_0: id\n                photo\n              }\n            }\n          }\n        },\n      },\n    }\n    "
  }
]