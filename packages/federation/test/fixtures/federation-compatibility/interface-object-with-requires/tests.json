[
  {
    "query": "\n      query {\n        anotherUsers {\n          id\n          name\n          username\n        }\n      }\n    ",
    "expected": {
      "data": {
        "anotherUsers": [
          {
            "id": "u1",
            "name": "u1-name",
            "username": "u1-username"
          },
          {
            "id": "u2",
            "name": "u2-name",
            "username": "u2-username"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"b\") {\n          {\n            anotherUsers {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"anotherUsers.@\") {\n          Fetch(service: \"a\") {\n            # NOTE\n            # The only interesting thing here is that NodeWithName is an interface in subgraph A\n            # and the gateway asks \"NodeWithName.__resolveReference\" for the \"username\" field\n            {\n              ... on NodeWithName {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                __typename\n                name\n              }\n            }\n          },\n        },\n        Flatten(path: \"anotherUsers.@\") {\n          Fetch(service: \"b\") {\n            {\n              ... on NodeWithName {\n                __typename\n                name\n                id\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                username\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        users {\n          id\n          name\n          username\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "id": "u1",
            "name": "u1-name",
            "username": "u1-username"
          },
          {
            "id": "u2",
            "name": "u2-name",
            "username": "u2-username"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            users {\n              __typename\n              id\n              name\n            }\n          }\n        },\n        Flatten(path: \"users.@\") {\n          Fetch(service: \"b\") {\n            {\n              ... on NodeWithName {\n                __typename\n                id\n                name\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                username\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        anotherUsers {\n          ... on User {\n            age\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "anotherUsers": [
          {
            "age": 11
          },
          {
            "age": 22
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"b\") {\n          {\n            anotherUsers {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"anotherUsers.@\") {\n          Fetch(service: \"a\") {\n            {\n              ... on NodeWithName {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                __typename\n                ... on User {\n                  age\n                }\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        users {\n          ... on User {\n            age\n          }\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "age": 11
          },
          {
            "age": 22
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Fetch(service: \"a\") {\n        {\n          users {\n            __typename\n            ... on User {\n              age\n            }\n          }\n        }\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        anotherUsers {\n          ... on User {\n            age\n            id\n            name\n            username\n          }\n          id\n          name\n        }\n      }\n    ",
    "expected": {
      "data": {
        "anotherUsers": [
          {
            "age": 11,
            "id": "u1",
            "name": "u1-name",
            "username": "u1-username"
          },
          {
            "age": 22,
            "id": "u2",
            "name": "u2-name",
            "username": "u2-username"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"b\") {\n          {\n            anotherUsers {\n              __typename\n              id\n            }\n          }\n        },\n        Flatten(path: \"anotherUsers.@\") {\n          Fetch(service: \"a\") {\n            {\n              ... on NodeWithName {\n                __typename\n                id\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                __typename\n                ... on User {\n                  age\n                  name\n                }\n                name\n                id\n              }\n            }\n          },\n        },\n        Flatten(path: \"anotherUsers.@\") {\n          Fetch(service: \"b\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n              ... on NodeWithName {\n                __typename\n                name\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                id\n                username\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        users {\n          ... on User {\n            age\n            id\n            name\n            username\n          }\n          id\n          name\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "age": 11,
            "id": "u1",
            "name": "u1-name",
            "username": "u1-username"
          },
          {
            "age": 22,
            "id": "u2",
            "name": "u2-name",
            "username": "u2-username"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            users {\n              __typename\n              ... on User {\n                __typename\n                id\n                age\n                name\n              }\n              id\n              name\n            }\n          }\n        },\n        Flatten(path: \"users.@\") {\n          Fetch(service: \"b\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n              ... on NodeWithName {\n                __typename\n                name\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                username\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  },
  {
    "query": "\n      query {\n        users {\n          ... on User {\n            age\n            id\n            name\n            username\n          }\n          id\n          name\n        }\n      }\n    ",
    "expected": {
      "data": {
        "users": [
          {
            "age": 11,
            "id": "u1",
            "name": "u1-name",
            "username": "u1-username"
          },
          {
            "age": 22,
            "id": "u2",
            "name": "u2-name",
            "username": "u2-username"
          }
        ]
      }
    },
    "plan": "\n    QueryPlan {\n      Sequence {\n        Fetch(service: \"a\") {\n          {\n            users {\n              __typename\n              ... on User {\n                __typename\n                id\n                age\n                name\n              }\n              id\n              name\n            }\n          }\n        },\n        Flatten(path: \"users.@\") {\n          Fetch(service: \"b\") {\n            {\n              ... on User {\n                __typename\n                id\n              }\n              ... on NodeWithName {\n                __typename\n                name\n              }\n            } =>\n            {\n              ... on NodeWithName {\n                username\n              }\n            }\n          },\n        },\n      },\n    }\n    "
  }
]