// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`allows a subgraph without any keys 1`] = `
"schema {
  query: Query
}

directive @external on FIELD_DEFINITION | OBJECT

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @link(url: String!, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @shareable repeatable on OBJECT | FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | INTERFACE | OBJECT | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

directive @composeDirective(name: String!) repeatable on SCHEMA

directive @extends on OBJECT | INTERFACE

union _Entity

scalar _Any

scalar _FieldSet

scalar link__Import

enum link__Purpose {
  SECURITY
  EXECUTION
}

type _Service {
  sdl: String!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  users: [User!]!
}

type User @extends {
  id: ID!
  name: String!
}"
`;

exports[`converts extensions in the subgraph SDL 1`] = `
"schema {
  query: Query
}

directive @external on FIELD_DEFINITION | OBJECT

directive @requires(fields: _FieldSet!) on FIELD_DEFINITION

directive @provides(fields: _FieldSet!) on FIELD_DEFINITION

directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @link(url: String!, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @shareable repeatable on OBJECT | FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @tag(name: String!) repeatable on FIELD_DEFINITION | INTERFACE | OBJECT | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

directive @composeDirective(name: String!) repeatable on SCHEMA

directive @extends on OBJECT | INTERFACE

union _Entity = User

scalar _Any

scalar _FieldSet

scalar link__Import

enum link__Purpose {
  SECURITY
  EXECUTION
}

type _Service {
  sdl: String!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  users: [User!]!
}

type User @key(fields: "id") @extends {
  id: ID!
  name: String!
}"
`;
