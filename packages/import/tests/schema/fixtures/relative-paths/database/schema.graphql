# THIS FILE HAS BEEN AUTO-GENERATED BY THE "GRAPHCOOL DEPLOY" COMMAND AT 2017-12-14T20:19:24.941Z
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Post implements Node {
  id: ID!
  isPublished: Boolean!
  title: String!
  text: String!
}

#
# Other Types
#

type Mutation {
  createPost(data: PostCreateInput!): Post!
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  deletePost(where: PostWhereUniqueInput!): Post
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type PostConnection {
  pageInfo: PageInfo!
  edges: [PostEdge]
}

input PostCreateInput {
  isPublished: Boolean!
  title: String!
  text: String!
}

type PostEdge {
  node: Post!
  cursor: String!
}

input PostFilter {
  AND: [PostFilter!]
  OR: [PostFilter!]
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  isPublished: Boolean
  isPublished_not: Boolean
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  text: String
  text_not: String
  text_in: [String!]
  text_not_in: [String!]
  text_lt: String
  text_lte: String
  text_gt: String
  text_gte: String
  text_contains: String
  text_not_contains: String
  text_starts_with: String
  text_not_starts_with: String
  text_ends_with: String
  text_not_ends_with: String
}

enum PostOrderBy {
  id_ASC
  id_DESC
  isPublished_ASC
  isPublished_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
}

input PostUpdateInput {
  isPublished: Boolean
  title: String
  text: String
}

input PostWhereUniqueInput {
  id: ID
}

type Query {
  posts(
    where: PostFilter
    orderBy: PostOrderBy
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Post!]!
  post(where: PostWhereUniqueInput!): Post
  postsConnection(
    where: PostFilter
    orderBy: PostOrderBy
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): PostConnection!
  node(id: ID!): Node
}
